# Hierarchy
set design(FULLCHIP_OR_MACRO) "FULLCHIP"; #FULLCHIP includes IO Ring
set design(HAS_SCAN)          "no"; # Are there scan ports

#############################################
#     Technology Definition
#############################################
set TECHNOLOGY		"TSMC65LP"
set SC_TECHNOLOGY	"ARM65LP_SC"
set SRAM_TECHNOLOGY	"ARM65LP_SRAM"
set IO_TECHNOLOGY	"TSMC65_IO"

#############################################
#       Port Definitions (From Verilog)
#############################################
###### Clocks
set design(CLK_NAME)  "CLK"
    set design(clock_list) [list $design(CLK_NAME)]
set design(CLK_PORT) "PAD_CLK"
    set design(clock_port_list) [list $design(CLK_PORT)]
# set design(CLK_PERIOD) 4.8
set design(CLK_PERIOD) 6.3
    set design(clock_period_list) [list $design(CLK_PERIOD)]
# For additional clocks, lappend to clock_list, clock_port_list, clock_period_list

# Reset
set design(RST_PORT) "PAD_RST_N"

# Scan
if {$design(HAS_SCAN)=="yes"} {
    set design(SCAN_MODE_PORT) ""
}

if {$design(FULLCHIP_OR_MACRO) == "FULLCHIP" } {
    set design(IO_MODULE)  ioring
    set design(IO_VERILOG) ioring.v
}    

# Hard Macros
set design(imem0) "lp_riscv*iccm_ram_0_sram_sp_16384x32"
set design(imem1) "lp_riscv*iccm_ram_1_sram_sp_16384x32"

#TODO - add your insts to the list, for usage in innovus.tcl script
set design(dmem0) "lp_riscv*dccm_ram_0_sram_sp_32768x32"

#############################################
#       SDC Settings
#############################################
# IO Constraints
set design(INPUT_DELAY)		[expr $design(CLK_PERIOD)/4.0]
set design(OUTPUT_DELAY)	[expr $design(CLK_PERIOD)/4.0]
set design(INPUT_TRANSITION)	[expr $design(CLK_PERIOD)/10.0]

# Clock Constraints 
set design(CLOCK_UNCERTAINTY)    0.125 ; # In ns for SDC (will appear in ps for get_db)
set design(CLOCK_MAX_TRANSITION) 0.250 ; # In ns for SDC (will appear in ps for get_db)
set design(CLOCK_MAX_FANOUT)      20
set design(CLOCK_MAX_CAPACITANCE) 0.100 ; # In pF for SDC (will appear in fF for get_db) 

# DRV Constraints
set design(MAX_FANOUT)     $design(CLOCK_MAX_FANOUT)
set design(MAX_TRANSITION) 0.35 ; # In ns for SDC (will appear in ps for get_db)
#set design(MAX_CAPACITANCE) ; # In pF for SDC (will appear in fF for get_db)

# Routing constraints:
set design(MIN_ROUTE_LAYER) 2
set design(MAX_ROUTE_LAYER) 9

#############################################
#       Files and Paths
#############################################
set design(workdir)           $env(PWD)
set design(project_root)      "$env(PWD)/.."
set design(inputs_dir)        "$design(project_root)/inputs"
set design(libraries_dir)     "$design(project_root)/libraries"
set design(sourcecode_dir)    "$design(project_root)/sourcecode/rtl"
set design(hdl_search_paths)  ". $design(sourcecode_dir) $design(sourcecode_dir)/riscv-master/include"
set design(read_hdl_list)     "$design(sourcecode_dir)/../riscv_src_list.txt"
set design(testbench_dir)     "$design(project_root)/sourcecode/tb"
set design(scripts_dir)       "$design(project_root)/scripts"
set design(export_dir)        "$design(project_root)/export"
set design(reports_dir)       "$design(project_root)/reports"
set design(dbs_dir)           "$design(project_root)/dbs"
set design(synthesis_reports) "$design(reports_dir)/synthesis"
set design(functional_sdc)    "$design(inputs_dir)/$design(TOPLEVEL).sdc"
set design(postsyn_netlist)   "$design(export_dir)/$design(TOPLEVEL).postsyn.v"
set design(postsyn_db_base_name) "$design(dbs_dir)/post_synth/$design(TOPLEVEL)"
set design(postsyn_db)        "$design(postsyn_db_base_name).stylus.enc"
set design(postsyn_sdf)       "$design(export_dir)/post_synth/$design(TOPLEVEL).postsyn.sdf"
set design(floorplan_def)     "$design(export_dir)/$design(TOPLEVEL).floorplan.def"
set design(postroute_netlist) "$design(export_dir)/$design(TOPLEVEL).final.v"
set design(postroute_sdf)     "$design(export_dir)/$design(TOPLEVEL).final.sdf"
set design(mmmc_view_file)    "$design(inputs_dir)/$design(TOPLEVEL).mmmc"
set design(io_file)           "$design(inputs_dir)/ioring.io"
set design(clock_tree_spec)   "$design(inputs_dir)/$design(TOPLEVEL).ccopt"
#set design(UPF_file)          "$design(inputs_dir)/$design(TOPLEVEL).upf"
#set design(CPF_file)          "$design(inputs_dir)/$design(TOPLEVEL).cpf"
#set design(dont_use_file)     "$design(inputs_dir)/$design(TOPLEVEL).dont_use"
#set design(size_only_file)    "$design(inputs_dir)/$design(TOPLEVEL).size_only"

#############################################
#       MMMC
#############################################
set design(selected_setup_analysis_views) "wc_analysis_view"
set design(selected_hold_analysis_views)  "bc_analysis_view"
set design(selected_power_analysis_views) "wc_analysis_view"

#############################################
#       Global Nets
#############################################
set design(digital_gnd) "gnd"
set design(all_ground_nets) $design(digital_gnd)
set design(digital_vdd) "vdd"
set design(all_power_nets) $design(digital_vdd)

if {$design(FULLCHIP_OR_MACRO) == "FULLCHIP" } {
    set design(io_gnd) "gnd"
    #lappend design(all_ground_nets) $design(io_gnd)
    set design(io_vdd) "vddio"
    lappend design(all_power_nets) $design(io_vdd)
}
#set design(additional_ground_nets) ""
#lappend design(all_ground_nets) $design(additional_ground_nets)
#set design(additional_power_nets) ""
#lappend design(all_power_nets) $design(additional_power_nets)

#############################################
# Simulation and Backannotation
#############################################
set design(testbench_dir) "$design(project_root)/sourcecode/tb"
set design(backannotation_tb) "$design(testbench_dir)/$design(TOPLEVEL)_tb.v"
set design(tb_name)  ""
set design(dut_name) ""
# For Backannotation and Power Reporting
set design(backannotation_script) "$design(testbench_dir)/$design(TOPLEVEL).backannotation.tcl"
set design(tcf_file) "$design(export_dir)/$design(tb_name).tcf"
set design(vcd_file) "$design(export_dir)/$design(tb_name).vcd"
set design(power_report_flow) "tcf" ; # "vcd" or "tcf" flow
set design(power_report_period) 0
set design(power_report_start_time) 0
set design(power_report_end_time) 0

#############################################
#       Get rid of annoying messages
#############################################
set design(DESIGN_SUPPRESS_MESSAGES_GENUS) "ST-110 ST-112 CFM-5 CFM-1"
# Stop reporting elaboration of multi-dimensional arrays
lappend design(DESIGN_SUPPRESS_MESSAGES_GENUS) "CDFG-250"
# Stop reporting implementation inference (chipWare)
lappend design(DESIGN_SUPPRESS_MESSAGES_GENUS) {*}"CWD-19 CWD-36"
# Stop reporting Replaced logic with a constant value
lappend design(DESIGN_SUPPRESS_MESSAGES_GENUS) "CDFG-771"
# Stop reporting unreachable case statements
lappend design(DESIGN_SUPPRESS_MESSAGES_GENUS) "CDFG-472"

set design(DESIGN_SUPPRESS_MESSAGES_INNOVUS) ""
# Stop reporting mismatch in voltage between IOs and standard cells
lappend design(DESIGN_SUPPRESS_MESSAGES_INNOVUS) "IMPMSMV-1810"


#############################################
#       Print values to debug file
#############################################
set var_list {TECHNOLOGY SC_TECHNOLOGY SRAM_TECHNOLOGY IO_TECHNOLOGY}
set dic_list {design}
enics_print_debug_data w $debug_file $design(TOPLEVEL).defines.tcl $var_list $dic_list

